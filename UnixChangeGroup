#!/bin/sh
echo $@ > /root/unixchangegroup
export ETCDCTL_API=3
cd /TopStor
leaderip=`echo $@  | awk '{print $1}'`;
groupname=`echo $@ | awk '{print $2}'`;
groupusers=`echo $@ | awk  '{print $3}' | sed 's/users//g'`
userreq=`echo $@  | awk '{print $4}'`;
ischange=`echo $@  | awk '{print $5}'`;
pullsync=`echo $@  | awk '{print $6}'`;
allusres=`echo $groupusers | sed 's/\,/ /g'`;
allusersel=`echo $allusers | wc -w`;
groupusersn=`echo $groupusers | wc -c `
if [ $groupusersn -le 2 ];
then
 groupusers='NoUser'
fi
stableuser="na"
privilege="Box_Users";
contrun=`./privthis.sh $privilege $userreq`;
if [[ $contrun == 'true' ]]
then

	myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
	myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
	leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
	echo $leader | grep $myhost
	if [ $? -eq 0 ];
	then
 		etcd=$leaderip
	else
		etcd=$myhostip
	fi
 #if a change happens before a group is created, no need to proceed, the script will be run again in the AddGroup
 id $groupname
 if [ $? -ne 0 ];
 then
	exit
 fi
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` running $userreq 
 echo s$pullsync | grep pull
 if [ $? -ne 0 ]
 then
 	docker exec etcdclient /TopStor/logmsg.py Unst1025 info $userreq $groupname
 fi
 echo $groupusers | grep NoUser
 if [ $? -ne 0 ];
 then
#### getting users need to removed
  echo ------------------------- $groupusers ---------------
  originalgroup=`/pace/etcdget.py $etcd usersigroup/$groupname`
  originalusers=`echo $originalgroup | awk -F'/' '{print $3}' `
  memoryallusers=$originalusers
  oldusers=$originalusers','
  oldusersel=` echo ${oldusers} | sed 's/,/ /g' | wc -w`
  echo ------------ $oldusersel ---------- $originalusers --- $oldusers--------
  while [ $oldusersel -gt 0 ];
  do
   l=`echo $oldusers |  cut -d, -f 1`
   lsn=`echo $l | wc -c `
   oldusers=`echo $oldusers | sed 's/ /,/g' | cut -d, -f2-`
   oldusers=$oldusers','
   oldusersel=`echo ${oldusers} | sed 's/,/ /g' | wc -w`
   if [ $lsn -le 2 ];
   then
    continue
   fi
   echo $groupusers | grep -w $l
   if [ $? -ne 0 ];
   then
    gpasswd -d $l $groupname
    originalusers=`echo $originalusers| sed "s/$l//g" | sed 's/^,//g' | sed 's/,,/,/g' | sed 's/,$//g'` 
   else
    stableuser=$stableuser' '$l
   fi 
  done 
  echo originalusers=$originalusers
  sleep 3
  echo 2------------ $oldusersel ---------- $originalusers --- $oldusers--------  $memoryallusers
  echo origusers$originalusers | grep origusers$memoryallusers 
  if [ $? -ne 0 ];
  then
   cusersleft=`echo $originalgroup | cut -d/ -f1-2`
   cusersright=`echo $originalgroup | cut -d/ -f4-`
   newusers=$originalusers
   groupres=$cusersleft'/'$newusers'/'$cusersright
   /pace/etcdput.py $etcd usersigroup/$groupname  $groupres 
  fi 
  usersall=`echo $groupusers`','
  usersl=` echo ${usersall} | sed 's/,/ /g' | wc -w`
  while [ $usersl  -gt 0 ];
  do
   l=`echo $usersall |  cut -d, -f 1`
   usersall=`echo $usersall | sed 's/ /,/g' | cut -d, -f2-`
   usersall=$usersall','
   usersl=`echo ${usersall} | sed 's/,/ /g' | wc -w`
   echo $stableuser | grep  -w $l
   if [ $? -eq 0 ];
   then
    continue
   fi
   usergroups=`id -Gn $l | sed 's/ /,/g' | sed "s/$l,//g" | sed "s/$groupname//g" |  sed "s/,,/,/g" | sed 's/,,,/,/g' | sed 's/,,,,/,/g' | sed 's/^,//g' | sed 's/,$//g' `
   usergroupsn=`echo $usergroups | wc -c`
   if [ $usergroupsn -le 2 ];
   then
    usergroups=$groupname
   else
    usergroups=$usergroups','$groupname
   fi 
    echo ------------------------------------------------------------------------------
   echo /TopStor/UnixChangeUser $l groups$usergroups $userreq 
   /TopStor/UnixChangeUser $leaderip $l groups$usergroups $userreq $ischange $pullsync &>/root/UnixChangeUser
  done 
 else
    echo ---------------0000000000000000000000000------------------- 
   /TopStor/UnixChangeUser $leaderip NoUser groups$groupname $userreq $ischange $pullsync &>/root/UnixChangeUser
 fi 
 #/TopStor/broadcast.py GroupChange /TopStor/pump.sh UnixChangeGroup_sync -d$myhost $@ 
 echo s$pullsync | grep pull
 if [ $? -ne 0 ]
 then
 	docker exec etcdclient /TopStor/logmsg.py Unsu1025 info $userreq $groupname
 fi
 echo ${ischange}$leader | grep change$myhost
 if [ $? -eq 0 ];
 then
  stamp=`date +%s`;
  myscript=`basename "$0"`
  params=`echo $myscript $@ pull | sed 's\ \\_\g'`
  echo params=$params
  /pace/etcdput.py $etcd sync/GrpChange/$params/request/$myhost GrpChange_${groupname}_$stamp
  /pace/etcdput.py $etcd sync/GrpChange/$params/request GrpChange_${groupname}_$stamp
 fi
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` finish $userreq 
fi
