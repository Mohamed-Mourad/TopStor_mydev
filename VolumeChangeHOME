#!/bin/sh
export ETCDCTL_API=3
cd /TopStor/
echo $@ > /root/volchange
leaderip=`echo $@ | awk '{print $1}'`;
name=`echo $@ | awk '{print $3}'`;
pDG=`echo $@ | awk '{print $2}'`;
quota=`echo $@ | awk '{print $4}'`;
writev=`echo $@ | awk '{print $5}'`;
ipaddr=`echo $@ | awk '{print $6}'`;
ipsubnet=`echo $@ | awk '{print $7}'`;
active=`echo $@ | awk '{print $8}'`;
myhost=`echo $@ | awk '{print $9}'`;
userreq=` echo $@ | awk '{print $10}'`;
domain=` echo $@ | awk '{print $11}'`;
domainsrvn=` echo $@ | awk '{print $12}'`;
domainsrvi=` echo $@ | awk '{print $13}'`;
domadm=` echo $@ | awk '{print $14}'`;
dompass=` echo $@ | awk '{print $15}'`;
DG=`echo $pDG `;
privilege="HOME";
contrun=`./privthis.sh $privilege $userreq`;
if [[ $contrun == 'true' ]]
then
        myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
        myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
        leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
        echo $leader | grep $myhost
        if [ $? -ne 0 ];
        then
                etcd=$myhostip
        else
                etcd=$leaderip
        fi
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` running $userreq
 if [ $writev != 'nogroup' ];
 then
  writev=`echo $writev | sed 's/nogroup//g'`
 fi
 echo $pDG $name $quota $writev $ipaddr $ipsubnet $myhost $userreq $extraparms>> /root/volchange
 docker exec etcdclient /TopStor/logmsg.py VolCst01 info $userreq $name
 echo name=$name
 myhost=`hostname -s`
 older=`ETCDCTL_API=3 /pace/etcdget.py $etcd volumes $name `
 echo $older | grep DOMAIN
 if [ $? -ne 0 ];
 then
  extraparms=''
 else
  isparams=`echo $domain | wc -c`
  if [ $isparams -ge 3 ];
  then
   extraparms='/'$domain'/'$domainsrvn'/'$domainsrvi'/'$domadm'/'$dompass
  else
    extraparms='/'`echo $older | awk -F'/' '{for(i=NF-4;i<=NF;i++) printf $i"/"; print ""}' | sed "s/')\///g"`
  fi
 fi
echo /pace/etcdput.py $leaderip volumes/HOMEE/$myhost/$DG/$name $DG/$name/no/yes/$writev/administrator/yes/$oldipaddr/${oldipsubnet}$extraparms/$active >> /root/volchange
 oldipaddr=`zfs get -H ip:addr $DG/$name | awk '{print $3}'`
 oldipsubnet=`zfs get -H ip:subnet $DG/$name | awk '{print $3}'`
 /TopStor/VolumefixChangeCIFS $leaderip $pDG $name HOMEE $oldipaddr $userreq
 /TopStor/VolumeDockerChange.py /$DG/$name $ipaddr
 ETCDCTL_API=3 /pace/etcddel.py $leaderip volumes $name
 echo ETCDCTL_API=3 /pace/etcdput.py $leaderip volumes/HOMEE/$myhost/$DG/$name $DG/$name/no/yes/$writev/administrator/yes/$ipaddr/${ipsubnet}$extraparms/$active
 ETCDCTL_API=3 /pace/etcdput.py $leaderip volumes/HOMEE/$myhost/$DG/$name $DG/$name/no/yes/$writev/administrator/yes/$ipaddr/${ipsubnet}$extraparms/$active
 stamp=`date +%s`
 ETCDCTL_API=3 /pace/etcdput.py $leaderip sync/volumes/${DG}_$name/request volumes_$stamp
 ETCDCTL_API=3 /pace/etcdput.py $leaderip sync/volumes/${DG}_$name/request/$leader volumes_$stamp
 echo checkkkkkkkkkkkkkkkkkkkkkkkkking
 ETCDCTL_API=3 /pace/etcdget.py $leaderip volumes $name
 sed -i "s/$oldipaddr/$ipaddr/g" /$DG/smb.$name
 sed -i "s/$oldipsubnet/$ipsubnet/g" /$DG/smb.$name
 /sbin/zfs set ip:addr=$ipaddr $DG/$name
 /sbin/zfs set ip:subnet=$ipsubnet $DG/$name
 /sbin/zfs set status:mount=$active $DG/$name


 #/pace/broadcasttolocal.py volumes/HOME/$myhost/$DG/$name $DG/$name/no/yes/$writev/administrator/yes/$ipaddr/$ipsubnet 
 /TopStor/VolumeActivateHome vol=$name user=$userreq
 /pace/putzpool.py 
 /TopStor/logmsg.py VolCsu01 info $userreq $name
 echo ready ;
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` finish $userreq
fi
