#!/bin/sh
echo $@ >/root/volcreatenfs
cd /TopStor
export ETCDCTL_API=3
leaderip=`echo $@ | awk '{print $1}'`;
shortname=`echo $@ | awk '{print $3}'`;
echo $shortname | grep '_repli'
if [ $? -eq 0 ];
then
 shortname=`echo $shortname | awk -F'_repli' '{print $1}'`
 name=$shortname
else
 nameid=$RANDOM$RANDOM
 name=${shortname}_$nameid
fi
pDG=`echo $@ | awk '{print $2}'`;
quota=`echo $@ | awk '{print $4}'`;
writev=`echo $@ | awk '{print $5}'`;
ipaddr=`echo $@ | awk '{print $6}'`;
ipsubnet=`echo $@ | awk '{print $7}'`;
active=`echo $@ | awk '{print $8}'`;
userreq=` echo $@ | awk '{print $9}'`;
DG=`echo $pDG `;
hostnam=`echo $pDG`;
#sshost=`cat $runningpools | grep $hostnam | awk '{print $1}'`;
privilege="CIFS";
contrun=`./privthis.sh $privilege $userreq`;
if [[ $contrun == 'true' ]]
then
	myhost=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternode`
	myhostip=`docker exec etcdclient /TopStor/etcdgetlocal.py clusternodeip`
	leader=`docker exec etcdclient /TopStor/etcdgetlocal.py leader`
	echo $leader | grep $myhost
	if [ $? -ne 0 ];
	then
 		etcd=$myhostip
	else
 		etcd=$leaderip
 	fi


	docker exec etcdclient /TopStor/logqueue.py `basename "$0"` running $userreq 
 /pace/etcdget.py $etcd volumes --prefix | grep $shortname
 if [ $? -eq 0 ];
 then
  docker exec etcdclient /TopStor/logmsg.py Unlin1021vv warning $userreq $shortname
  docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop_canceled $userreq 
  exit
 fi
 /pace/etcdget.py $etcd usersinfo --prefix | grep $shortname
 if [ $? -eq 0 ];
 then
  docker exec etcdclient /TopStor/logmsg.py Unlin1021vu warning $userreq $name
  docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop_canceled $userreq 
  exit
 fi
 oldname=` /sbin/zfs list | grep "$shortname" `;
 if [ $? -eq 0 ];
 then
   docker exec etcdclient /TopStor/logmsg.py NFS1003 warning  $userreq $name
 else
  docker exec etcdclient /TopStor/logmsg.py NFS1004 info  $userreq $name
 fi
 cd /TopStor
 /sbin/zfs create -o overlay=on -o acltype=posixacl -o aclinherit=passthrough -o xattr=sa -o atime=off -o redundant_metadata=most -o quota=$quota -o dedup=on -o compression=lz4  $DG/$name
 /sbin/zfs set prot:kind=NFS $DG/$name 
 /sbin/zfs set ip:addr=$ipaddr $DG/$name
 /sbin/zfs set ip:subnet=$ipsubnet $DG/$name
 /sbin/zfs set status:mount=$active $DG/$name

 oct1=`echo $ipaddr | awk -F'.' '{print $1}'`
 oct2=`echo $ipaddr | awk -F'.' '{print $2}'`
 oct3=`echo $ipaddr | awk -F'.' '{print $3}'`

 who=$oct1'.'$oct2'.'$oct3'.*'
 who='*'
 ETCDCTL_API=3 /pace/etcdput.py $leaderip volumes/NFS/$myhost/$DG/$name $DG/$name/$who/rw/sync/insecure/no_root_squash/no_all_squash/$writev/$ipaddr/$ipsubnet/$active
 #ETCDCTL_API=3 /pace/broadcasttolocal.py volumes/NFS/$myhost/$DG/$name $DG/$name/$who/rw/sync/insecure/no_root_squash/no_all_squash/$writev/$ipaddr/$ipsubnet/$active
 ls /$DG/ | grep $name
 if [ $? -ne 0 ];
 then
  docker exec etcdclient /TopStor/logmsg.py NFS1005 error  $userreq $name
 else 
  l=$DG'/'$name'/'$who'/rw/sync/insecure/no_root_squash/no_all_squash/'$writev'/'$ipaddr'/'$ipsubnet'/'$active
  stamp=`date +%s`
  ETCDCTL_API=3 /pace/etcdput.py $leaderip volumes/NFS/$myhost/$DG/$name $l
  ETCDCTL_API=3 /pace/etcdput.py $leaderip sync/volumes/${DG}_$name/request volumes_$stamp
  ETCDCTL_API=3 /pace/etcdput.py $leaderip sync/volumes/${DG}_$name/request/$leader volumes_$stamp
  echo '# SUMMARY' volumes/NFS/$myhost/$DG/$name $l  > /TopStordata/exports.${name}
  echo /$DG/$name' '$who'('rw','sync','insecure','no_root_squash','no_all_squash')' >> /TopStordata/exports.$name 
  mv /TopStordata/exports.${name} /$DG/
  docker exec etcdclient /TopStor/logmsg.py NFS1007 info $userreq $name
 fi;
 /TopStor/SnapshotCreateHourlytrend $leaderip $DG $name 0 24 7 system 
 #/TopStor/VolumeActivateNFS $leaderip vol=$name user=$userreq
 echo /TopStor/nfs.py $leader $leaderip $myhost $myhostip $etcd $DG $name $ipaddr $ipsubnet NFS 
 /TopStor/nfs.py $leader $leaderip $myhost $myhostip $etcd $DG $name $ipaddr $ipsubnet NFS 
 chmod a+w /$DG/$name -R
 /pace/putzpool.py $leaderip  
fi

echo ready ;
 docker exec etcdclient /TopStor/logqueue.py `basename "$0"` stop $userreq 
